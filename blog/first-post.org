#+TITLE:       How to /make/ *this* =blog= with emacs
#+AUTHOR:      Diego Berrocal
#+EMAIL:       io@Jupiter
#+DATE:        2015-05-25 Mon
#+URI:         /blog/%y/%m/%d/how-to-make-a-blog-with-emacs
#+KEYWORDS:    blog, org-page, emacs, Diego Berrocal
#+TAGS:        emacs, blog
#+LANGUAGE:    en
#+OPTIONS:     H:3 num:nil toc:nil \n:nil ::t |:t ^:nil -:nil f:t *:t <:t
#+DESCRIPTION: Or how to use org-page and emacs to publish a blog with GitHub Pages

* What I used

- Emacs 24.4
- [[http://orgmode.org/][Org-mode]] 8.2
- [[https://github.com/syl20bnr/spacemacs][Spacemacs]]
- [[https://github.com/kelvinh/org-page][org-page]] package
- (optional) custom theme =just_right=
- [[https://pages.github.com/][GitHub Pages]]

* Setup

Assuming you got your configuration for org-mode up and running (whether using
=spacemacs= or not) and also have installed the =org-page= package let's get
started with what you may need to setup manually:


** Config Org-page
Org-page has a nice quick-start guide [[https://github.com/kelvinh/org-page/blob/master/doc/quick-guide.org][here]] but I will put what I have setted up
for my blog:

- Mandatory stuff
#+begin_src emacs-lisp
  (setq op/site-domain "https://cestdiego.github.com/")
  (add-to-list 'op/category-ignore-list "temp")
  (setq op/repository-directory "~/Projects/le_blog/")
#+end_src

- Only do if you have a custom theme
#+begin_src emacs-lisp
  ;; This two are optional , only if you want have a custom theme
  (setq op/theme-root-directory "~/spacemacs_conf/org-cestdiego/org-page-themes/")
  (setq op/theme 'just_right)
#+end_src

- Optional stuff
#+begin_src emacs-lisp
  (setq op/personal-github-link "https://github.com/CestDiego/")
  (setq op/site-main-title "Diego Berrocal")
  (setq op/site-sub-title "it's personal")
  (setq op/personal-avatar "https://avatars0.githubusercontent.com/u/3291619?v=3&s=460")
#+end_src

** Set up some function

#+begin_src emacs-lisp
  (evil-leader/set-key
    "opo" '(lambda () (interactive)
             (magit-status op/repository-directory))
    "opp" '(lambda() (interactive)
             (op/do-publication t nil t nil)
             (find-file op/repository-directory))
    "opP" '(lambda() (interactive)
             (op/do-publication t t (concat op/repository-directory "temp/build"))))

#+end_src

** Dotspacemacs init

#+begin_src emacs-lisp
(defun dotspacemacs/layers ()
  "Configuration Layers declaration."
  (setq-default
   ;; List of additional paths where to look for configuration layers.

   ;; Paths must have a trailing slash (ie. `~/.mycontribs/')
   dotspacemacs-configuration-layer-path '("~/spacemacs_conf/")
   ;; List of configuration layers to load. If it is the symbol `all' instead
   ;; of a list then all discovered layers will be installed.
   dotspacemacs-configuration-layers '(appearance
                                       ;;Test;;
                                       ;; ocodo-svg-modeline
                                       ;; vim-powerline
                                       spaceppets
                                       (git :variables
                                            git-magit-status-fullscreen t
                                            git-enable-github-support t
                                            git-gutter-use-fringe t)
                                       prodigy
                                       (colors :variables
                                               colors-enable-nyan-cat-progress-bar ,(display-graphic-p)
                                               colors-enable-rainbow-identifiers nil)
                                       ;; (perspectives :variables
                                       ;;               perspective-enable-persp-projectile t)
                                       eyebrowse
                                       chrome
                                       erc
                                      (rcirc :variables
                                             rcirc-default-nick "cestdiego"
                                             rcirc-default-user-name "cestdiego"
                                             rcirc-default-full-name "Diego Berrocal"
                                             rcirc-enable-znc-support t)
                                       html
                                       restclient
                                       ;; Org
                                       org
                                       ;; org-notify
                                       org-cestdiego
                                       ;; Helm
                                       helm
                                       ;; Code Navigation
                                       ecb
                                       ;; multimedia
                                       presentations
                                       ;; Miscellaneous
                                       emoji
                                       ;; webkit
                                       wakatime
                                       ;; Media
                                       bongo
                                       ;; Completings Stuff
                                       (auto-completion
                                        :variables
                                        auto-completion-enable-help-tooltip t
                                        auto-completion-return-key-behavior complete
                                        auto-completion-complete-with-key-sequence "jk")
                                       slime
                                       ycmd
                                       ;; Syntax Checking Stuff
                                       syntax-checking
                                       ;; LaTeX
                                       auctex
                                       ;; Shells
                                       eshell
                                       (shell :variables
                                              shell-default-shell ansi-term
                                              shell-pop-autocd-to-working-dir nil
                                              shell-default-term-shell "/bin/zsh")
                                       ;; Lang
                                       ansible
                                       markdown
                                       clojure
                                       cp2k
                                       emacs-lisp
                                       html
                                       c-c++
                                       python
                                       ipython
                                       sql
                                       haskell
                                       javascript
                                       ruby
                                       ;; Utils
                                       search-engine
                                       calfw
                                       floobits
                                       utils
                                       xkcd
                                       vagrant
                                       )
   ;; List of additional packages that will be installed wihout being
   ;; wrapped in a layer. If you need some configuration for these
   ;; packages then consider to create a layer, you can also put the
   ;; configuration in `dostspacemacs/config'.
   dotspacemacs-additional-packages '()
   ;; A list of packages and/or extensions that will not be install and loaded.
   dotspacemacs-excluded-packages '(evil-org)
   ;; If non-nil spacemacs will delete any orphan packages, i.e. packages that
   ;; are declared in a layer which is not a member of
   ;; the list `dotspacemacs-configuration-layers'
   dotspacemacs-delete-orphan-packages t))
#+end_src
