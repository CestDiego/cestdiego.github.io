#+TITLE:       How to /make/ *this* =blog= with emacs
#+AUTHOR:      Diego Berrocal
#+EMAIL:       io@Jupiter
#+DATE:        2015-05-25 Mon
#+URI:         /blog/%y/%m/%d/how-to-make-a-blog-with-emacs
#+KEYWORDS:    blog, org-page, emacs, Diego Berrocal
#+TAGS:        emacs, blog
#+LANGUAGE:    en
#+OPTIONS:     H:3 num:nil toc:nil \n:nil ::t |:t ^:nil -:nil f:t *:t <:t
#+DESCRIPTION: Or how to use org-page and emacs to publish a blog with GitHub Pages

* What I used

- Emacs 24.4
- [[http://orgmode.org/][Org-mode]] 8.2
- [[https://github.com/syl20bnr/spacemacs][Spacemacs]]
- [[https://github.com/kelvinh/org-page][org-page]] package
- (optional) custom theme =just_right=
- [[https://pages.github.com/][GitHub Pages]]

* Setup

Assuming you got your configuration for org-mode up and running whether
using *spacemacs* or not) and also have installed the =org-page= package let's get
started with what you may need to setup manually:


** Config Org-page
Org-page has a nice quick-start guide [[https://github.com/kelvinh/org-page/blob/master/doc/quick-guide.org][here]] but I will put what I have setted up
for my blog:

- Mandatory stuff
#+begin_src emacs-lisp
  (setq op/site-domain "https://cestdiego.github.com/")
  (add-to-list 'op/category-ignore-list "temp")
  (setq op/repository-directory "~/Projects/le_blog/")
#+end_src

- Only do if you have a custom theme
#+begin_src emacs-lisp
  ;; This two are optional , only if you want have a custom theme
  (setq op/theme-root-directory "~/spacemacs_conf/org-cestdiego/org-page-themes/")
  (setq op/theme 'just_right)
#+end_src

- Optional stuff
#+begin_src emacs-lisp
  (setq op/personal-github-link "https://github.com/CestDiego/")
  (setq op/site-main-title "Diego Berrocal")
  (setq op/site-sub-title "it's personal")
  (setq op/personal-avatar "https://avatars0.githubusercontent.com/u/3291619?v=3&s=460")
#+end_src

** Set up some function

#+begin_src emacs-lisp
  (evil-leader/set-key
    "opo" '(lambda () (interactive)
             (magit-status op/repository-directory))
    "opp" '(lambda() (interactive)
             (op/do-publication t nil t nil)
             (find-file op/repository-directory))
    "opP" '(lambda() (interactive)
             (op/do-publication t t (concat op/repository-directory "temp/build"))))

#+end_src

WIP
